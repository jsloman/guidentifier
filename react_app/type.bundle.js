!function(e){function t(r){if(a[r])return a[r].exports;var i=a[r]={exports:{},id:r,loaded:!1};return e[r].call(i.exports,i,i.exports,t),i.loaded=!0,i.exports}var a={};return t.m=e,t.c=a,t.p="",t(0)}([function(e,t){"use strict";var a=React.createClass({displayName:"Category",rawMarkup:function o(){var o=marked(this.props.children.toString(),{sanitize:!0});return{__html:o}},handleClick:function(e){this.props.onCategorySelect(this.props.category.name)},render:function(){return React.createElement("div",{className:"category"},React.createElement("h2",{className:"categoryName",onClick:this.handleClick},this.props.category.name))}}),r=React.createClass({displayName:"CategoryList",render:function(){var e=this.props.categories.map(function(e){return React.createElement(a,{key:e.name,category:e,onCategorySelect:this.props.onCategorySelect},e.name)}.bind(this));return React.createElement("div",{className:"categoryList"},e)}}),i=React.createClass({displayName:"CategoryForm",getInitialState:function(){return{name:""}},handleNameChange:function(e){this.setState({name:e.target.value})},handleSubmit:function(e){e.preventDefault();var t=this.state.name.trim();t&&(this.props.onCategorySubmit({name:t}),this.setState({name:""}))},render:function(){return React.createElement("form",{className:"commentForm",onSubmit:this.handleSubmit},React.createElement("input",{type:"text",placeholder:"Category name",value:this.state.name,onChange:this.handleNameChange}),React.createElement("input",{type:"submit",value:"Add category"}))}}),n=React.createClass({displayName:"CategoryBox",loadCategoriesFromServer:function(){gapi.client.guidentifierApi.guidentifierApi.getCategories().execute(function(e){console.log("got data: "+JSON.stringify(e)),this.setState({categories:e.items})}.bind(this))},loadGroupsFromServer:function(e){null!=e&&gapi.client.guidentifierApi.guidentifierApi.getGroups({categoryName:e}).execute(function(e){console.log("got group data: "+JSON.stringify(e)),this.setState({groups:e.items})}.bind(this))},handleCategorySubmit:function(e){console.log(" adding category: "+e+" which is: "+JSON.stringify(e)),gapi.client.guidentifierApi.guidentifierApi.addCategory(e).execute(function(e){console.log("added category: "+JSON.stringify(e)),this.loadCategoriesFromServer()}.bind(this))},handleGroupSubmit:function(e,t){console.log(" adding group: "+t),gapi.client.guidentifierApi.guidentifierApi.addGroup({categoryName:e,groupName:t}).execute(function(e){console.log("added group: "+JSON.stringify(e)),this.loadGroupsFromServer(this.state.categoryName)}.bind(this))},handleCategorySelect:function(e){this.setState({categoryName:e}),this.loadGroupsFromServer(e)},getInitialState:function(){return{categories:[],categoryName:null,groups:[]}},componentDidMount:function(){this.loadCategoriesFromServer()},render:function(){return React.createElement("div",{className:"categoryBox"},React.createElement("h1",null,"Categories"),React.createElement(r,{categories:this.state.categories,onCategorySelect:this.handleCategorySelect}),React.createElement(i,{onCategorySubmit:this.handleCategorySubmit}),React.createElement(GroupBox,{categoryName:this.state.categoryName,groups:this.state.groups,onGroupSubmit:this.handleGroupSubmit}))}});window.CategoryBox=n}]);